@inject NavigationManager NavigationManager;
@inject ServiceStackStateProvider AuthStateProvider;

<Router AppAssembly="@typeof(Program).Assembly" PreferExactMatches="@true">
    <Found Context="routeData">
        <AuthorizeRouteView RouteData="@routeData"
                            DefaultLayout="@typeof(MainLayout)">
            <NotAuthorized>
                <h1 class="mb-4 text-2xl font-semibold text-gray-900">
                    Sorry
                </h1>
                <p>You're not authorized to reach this page.</p>
                <p>
                    Please  
                    <NavLink class="underline hover:text-green-600" @onclick=@login href="javascript:void">login</NavLink> 
                    as a different user.
                </p>
            </NotAuthorized>
            
            <Authorizing>
                <p class="text-gray-400 absolute -mt-4 mr-4 right-0">Authenticating...</p>
                <RouteView RouteData="@routeData" />
            </Authorizing>

        </AuthorizeRouteView>
    </Found>
    <NotFound>
        <LayoutView Layout="@typeof(MainLayout)">
            <p>Sorry, there's nothing at this address.</p>
        </LayoutView>
    </NotFound>
</Router>

@code {

    async Task login()
    {
        var loginUrl = NavigationManager.GetLoginUrl();
        await AuthStateProvider.LogoutIfAuthenticatedAsync();
        NavigationManager.NavigateTo(loginUrl, true);
    }

}